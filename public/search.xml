<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[About the configuration of this website]]></title>
    <url>%2Fen%2Fabout-config%2F</url>
    <content type="text"><![CDATA[1 Init 1.1 Download1.1.1 hexo1234567891011121314151617181920212223hexo init makergyt.github.iocd makergyt.github.iocnpm install# package.json&#123; "name": "hexo-site", "version": "0.0.0", "private": true, "hexo": &#123; "version": "" &#125;, "dependencies": &#123; "hexo": "^3.8.0", "hexo-generator-archive": "^0.1.5", "hexo-generator-category": "^0.1.3", "hexo-generator-index": "^0.2.1", "hexo-generator-tag": "^0.2.0", "hexo-renderer-ejs": "^0.3.1", "hexo-renderer-stylus": "^0.3.3", "hexo-renderer-marked": "^0.3.2", "hexo-server": "^0.3.3" &#125;&#125; 1.1.2 next12cd makergyt.github.iogit clone https://github.com/theme-next/hexo-theme-next themes/next 2 user-defined2.1 hexo123456789101112131415161718192021222324# ./_config.yml# Siteauthor: Gao Yutinglanguage: - zh-CN - en timezone: Asia/Shanghai# URLurl: https://blog.makergyt.compermalink: :lang/:title/permalink_defaults: lang: zh-CNroot: /# Deploymentdeploy: - type: git repo: git@github.com:MakerGYT/makergyt.github.io.git branch: master - type: git repo: git@git.dev.tencent.com:memakergytcom/blog.git branch: master# Writingnew_post_name: :lang/:title.md 2.1.1 deployment12345678910cnpm install hexo-deployer-git --save# deploy on coding pages `Error`: no styles# next/_config.yml- type: git - repo: git@git.dev.tencent.com:memakergytcom/blog.git + repo: git@git.dev.tencent.com:memakergytcom/memakergytcom.git # The authorities did not say,project name must be user name when coding pages is used (similar to github pages).This is a bug: - url:memakergytcom.coding.me/blog + url:memakergytcom.coding.me # my url: blog-cn.makergyt.com 2.1.2 hexo-qiniu-sync1234567891011121314151617181920212223cnpm install hexo-qiniu-sync --save# ./_config.ymlqiniu: offline: false sync: true bucket: blog # secret_file: sec/qn.json or C: access_key: secret_key: -7s1GaiE82h-AKUAIqsd9X dirPrefix: static urlPrefix: https://blog-cdn.makergyt.com/static up_host: http://upload.qiniu.com local_dir: cdn update_exist: true image: folder: images extend: js: folder: js css: folder: css# md reference.md&#123;% qnimg book.jpg title:图片标题 alt:图片说明 extend:?imageView2/2/w/600 %&#125; 2.2 next123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114# next/_config.ymlmenu: home: / || chrome about: /about/ || address-card categories: /categories/ || th archives: /archives/ || archivefavicon: # makergyt.github.io/source/images/ small: /images/favicon-16x16.png medium: /images/favicon-32x32.png apple_touch_icon: /images/apple-touch-icon.png safari_pinned_tab: /images/safari-pinned-tab.svg ms_browserconfig: /images/browserconfig.xml # need to transparentfooter: since: 2018 icon: name: heart animated: true color: "#ff0000" powered: enable: false beian: enable: true icp: 陕ICP备16017712号-1creative_commons: license: by-nc-sa sidebar: true post: false language: deed.zhgithub_banner: enable: true permalink: https://github.com/makergyt title: GitHubmobile_layout_economy: truecustom_logo: enable: true image: /images/favicon-32x32.pngfont: enable: true global: family: Mondamotion: enable: true transition: post_block: shrinkInseo: truecheers: falsescroll_to_more: truesave_scroll: truecodeblock: copy_button: enable: true show_result: true style: flathighlight_theme: normalwechat_subscriber: enable: true qcode: /images/wechat-qcode.jpg description: scan to see the vaster worldreward_settings: enable: true animation: false comment: Add chicken legreward: wechat: /images/wechatpay.pngrelated_posts: enable: truesocial: E-Mail: mailto:me@makergyt.com || envelope Weibo: https://weibo.com/u/5165628041 || weibo Twitter: https://twitter.com/makergyt || twitter FB Page: https://www.facebook.com/makergyt || facebook 500PX: https://500px.com || 500px Telegram: https://t.me/makergyt || telegramsocial_icons: enable: true icons_only: truelinks_icon: anchorlinks: Main site: https://makergyt.comback2top: enable: true sidebar: true scrollpercent: truegitalk: enable: true github_id: makergyt repo: makergyt.github.io client_id: 64a9c28ff540acfb8d4b client_secret: 647cb5af47a926a76f6eb1d1001fe8a5230dd0b0 admin_user: makergytbaidu_analytics: 3af747eaf2360bbaf46d8aa9f5b62d22reading_progress: enable: truereading_progress: //cdn.jsdelivr.net/gh/theme-next/theme-next-reading-progress@1.1/reading_progress.min.jscanvas_nest: truecanvas_nest: //cdn.jsdelivr.net/npm/canvas-nest.js@1.0.1/dist/canvas-nest.min.jsmath: enable: true per_page: true engine: mathjax mathjax: cdn: //cdn.jsdelivr.net/npm/mathjax@2/MathJax.js?config=TeX-AMS-MML_HTMLorMMLnote: style: flatpdf: enable: truegoogle_site_verification: XAprdFd37bx8X8i-_S77-8ArPy8hkI5RCtKym1Z52rYbing_site_verification: E14AC9D3BA8CE3C20D05F77EE7BC738Fmermaid: enable: true theme: default cdn: //cdn.jsdelivr.net/npm/mermaid@8.0.0/dist/mermaid.min.js 2.2.1 4041234567# source/404/404.md---title: 404date: 1970-01-01 00:00:00---&lt;script src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="Back to home"&gt;&lt;/script&gt; 2.2.2 Post Wordcount1234567891011121314cnpm install hexo-symbols-count-time --save# ./_config.ymlsymbols_count_time: symbols: true time: true total_symbols: false total_time: false# next/_config.ymlsymbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 4 wpm: 275 2.2.3 Local Search12345678910111213cnpm install hexo-generator-searchdb --save# ./_config.ymlsearch: path: search.xml field: post format: html limit: 10000# next/_config.ymllocal_search: enable: truefancybox: truefancybox: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.jsfancybox_css: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css 2.2.4 Add end12345678910111213141516vim /themes/next/layout/_macro/passage-end-tag.swig&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------end-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt;vim /themes/next/layout/_macro/post.swig# line 333&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt;# next/_config.ymlpassage_end_tag: enabled: true 2.2.5 encrypt12345cnpm install --save hexo-blog-encrypt# ./_config.yml# Securityencrypt: enable: true 2.2.6 music2.2.6.1 sidebar123456789vim /themes/next/layout/_macro/siderbar.swig# siderbar.swig line 168&#123;% if theme.music.enabled %&#125; &lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="&#123;&#123; theme.music.song &#125;&#125;"&gt;&lt;/iframe&gt;&#123;% endif %&#125;# next/_config.ymlmusic: enabled: true song: //music.163.com/outchain/player?type=2&amp;id=28692687&amp;auto=0&amp;height=66 2.2.6.2 page123456cnpm install --save hexo-tag-aplayer# ./_config.xmlaplayer: meting: true# ./about/index.md&#123;% meting "2526283537" "netease" "playlist" "mutex:false" "listmaxheight:340px" "preload:none" "theme:#FC6423"%&#125; Reference[1] NexT.Gemini.Documentation[EB/OL].https://theme-next.org/docs/ .2019.]]></content>
      <categories>
        <category>config</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[markdown reference]]></title>
    <url>%2Fen%2Fmd%20reference%2F</url>
    <content type="text"><![CDATA[math$$x+1\over\sqrt{1-x^2} \tag{i}\label{eq_tag}$$ $$\begin{align}-4 + 5x &amp;= 2+y \nonumber \ w+2 &amp;= -1+w \ ab &amp;= cb\end{align}$$ $$\begin{equation}\begin{aligned}a &amp;= b + c \ &amp;= d + e + f + g \ &amp;= h + i\end{aligned}\end{equation}\label{eq2}$$ $$\begin{equation}e=mc^2\end{equation}\label{eq1}$$ Centered QuoteElegant in code, simple in core note Default HeaderWelcome to Hexo! Primary HeaderWelcome to Hexo! Info HeaderWelcome to Hexo! Warning HeaderWelcome to Hexo! Danger HeaderWelcome to Hexo! No icon noteNote without icon: note info no-icon123code block in note tagcode block in note tagcode block in note tag Success HeaderWelcome to Hexo! TabSolution 1First unique name 3This is Tab 1.123code tagcode tagcode tag Note default tag. Video Group picture PDF mermaid graph TD A[Christmas] -->|Get money| B(Go shopping) B --> C{Let me thinkssssssssssssssssssssssssssssssssssssssssssssssssssssss} C -->|One| D[Laptop] C -->|Two| E[iPhone] C -->|Three| F[Car] gantt dateFormat YYYY-MM-DD axisFormat %d/%m title Adding GANTT diagram to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page : 20h Add another diagram to demo page : 48h gitGraph: options { "nodeSpacing": 150, "nodeRadius": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch]]></content>
      <categories>
        <category>reference</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《悬崖》的几处错误]]></title>
    <url>%2Fzh-CN%2F%E3%80%8A%E6%82%AC%E5%B4%96%E3%80%8B%E7%9A%84%E5%87%A0%E5%A4%84%E9%94%99%E8%AF%AF%2F</url>
    <content type="text"><![CDATA[老魏说，日本人还有一年就完了 高科长搜周乙的家时 未完]]></content>
      <categories>
        <category>tv</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[《皖南事变》]]></title>
    <url>%2Fzh-CN%2F%E3%80%8A%E7%9A%96%E5%8D%97%E4%BA%8B%E5%8F%98%E3%80%8B%2F</url>
    <content type="text"><![CDATA[从书的文字来说，毕竟是文学体裁的小说，就不能用纪实的角度去了解与辨明。 但自认为作者对这两者的关系掌控的不是很好，在关键过程即将长驱直入叙述时，或又横生出景致环境的描写，或又穿插曾经的过往小事。当然，在表现一些人物的情绪或是思维变化时，这样的插入是常用的文学手法，然而阅读的直觉却是——并没有因此大放异彩，甚至于有拼凑文字之嫌。不过，瑕不掩瑜，作者极尽可能的在一些关键性的场合凸显人物的性格，在黑与白、是与非方面，没有绝对的去评判，而是辩证的站在不同角度去引导读者思考。正如书中在项英同林志超总结时， 这种繁琐的总结会把实质性的错误掩盖在似是而非的材料堆里，让人摸不着头脑、抓不住要领，打乱架，和稀泥。花时间耗精力，弄出一篇官样文章来，对于指导实践毫无意义，总结不断搞，错误不断犯。 就史实而言，本书必定会有一些脱离与拓展，况且“关于皖南事变中的是非功过、利害得失，长期以来，史学家们争论不休，向无定论。”，因而更愿意也仅仅从小说层面来探讨这段历史。曾经由于了解浅薄，一直有一个疑问，皖南事变作为抗日时期国民党反共高潮的产物，作为受害的一方为什么没有去大做文章来揭露，一些历史书往往一笔带过甚至并不提及。实事求是的说，这的确不是一件值得宣传的事件，于是萌发某种猜想。本书的描述逐渐地印证了这种猜想。产生几个问题 红军长征为什么委派项英继续领导南方的游击作战,项英与一同留下的排挤在外的瞿秋白关系是怎样的被冠以“中国人民解放军军事家”称号的叶挺，书中所说可能局限于北伐，如何评价他的军事能力]]></content>
      <categories>
        <category>book</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Dillinger Deploy Record]]></title>
    <url>%2Fen%2Fdillinger%2F</url>
    <content type="text"><![CDATA[12345// package-lock.json // line 15310 "phantomjs": "~1.9.7" -&gt; "phantomjs": "~2.1.16"// line 15380"version": "1.9.20" -&gt;"version": "2.1.16" 123456// app.js line 46 ?//May not need to use favicon if using nginx for serving//static assets. Just comment it out below.app.use(favicon(path.join(__dirname, 'public/favicon.ico')))// app.js line 79 ?//Let's 301 redirect to simply dillinger.io The above problems have not been solved yet,but the main problem is the inability to modify the template file “readme.md” that was initially loaded.The location of this configuration cannot be located at this time. So I started generating my own build editor.Requirements are summarized as follows: markdown online editor real-time preview automatically save math expressionsadvanced: syntax hint double bar rolling(change working-mode) save to cloud such as github repositories image cdn file import .md file export .md,html(style),PDF hexo admin bind with github,generate and deploy?install the hexo blog and hexo editor at the same host requirements: open source design for publicAll files are temporarily storedbut also for private use:Bind account and login by authorization reference: dillinger hexo editor So it looks like we’re going to have to use VPS，so here comes the question: Why not just deploy hexo directly on top of it when you have VPS? Does extending so much functionality violate hexo’s simplicity? It’s going to look more and more like a CMS, So if this goes on, what’s the point of hexo versus wordpress？ I’m starting to get lost…]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[how-to-create-an-operating-system 操作问题记录]]></title>
    <url>%2Fzh-CN%2Fhow-to-create-an-operating-system-%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[本地系统环境：ubuntu 16.04软件环境：vagrant 2.2.2,vitual box 6.0 the box url is invalid 查找类似的box:https://app.vagrantup.com/boxes/search?utf8=%E2%9C%93&amp;sort=downloads&amp;provider=&amp;q=lucid32123vagrant init mrgcastle/ubuntu-lucid32 \ --box-version 1.0.0.0vagrant login #need to create a account at vagrantup.com 登录错误提示无法解析127.0.0.1:8118,此URL是由于本地使用了ss代理,故暂时关闭privoxy并且在/etc/profile中取消代理，重启生效1234567sudo vim Vagrantfile# append$script = %Q&#123; sudo apt-get update sudo apt-get install nasm make build-essential grub qemu zip -y &#125;config.vm.provision :shell, :inline =&gt; $script “-y” error ,force to yes初始化脚本未执行，故开机后依次手动执行1sudo apt-get update Error http://security.ubuntu.com lucid-security/main Packages 404 Not Found [IP: 91.189.91.23 80]Warning Failed to fetch http://us.archive.ubuntu.com/ubuntu/dists/lucid/restricted/binary-i386/Packages.gz 404 Not Found [IP: 91.189.91.23 80] mannul install unzip (latest)1sudo apt-get install zip Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/u/unzip/unzip_6.0-1ubuntu1_i386.debopen the url:http://security.ubuntu.com/ubuntu/pool/main/u/unzip/,find the oldest version orresponding to architecture1234dpkg --print-architecture i386wget http://security.ubuntu.com/ubuntu/pool/main/u/unzip/unzip_6.0-21ubuntu1_i386.debdpkg -i unzip_6.0-21ubuntu1_i386.deb file `unzip_6.0-21ubuntu1_i386.deb&#39; contains ununderstood data member data.tar.xz , giving up12wget http://security.ubuntu.com/ubuntu/pool/main/u/unzip/unzip_6.0-4ubuntu1_i386.debdpkg -i unzip_6.0-4ubuntu1_i386.deb install zip123wget http://us.archive.ubuntu.com/ubuntu/pool/main/z/zip/zip_3.0-4_i386.debsudo dpkg -i zip_3.0-4_i386.debzip -v install nasm,(make,build-essential is already installed)grub,qemu:Errors were encountered while processing modify apt-get以上寻找版本手动安装没有根本解决问题，问题在于采用的默认apt源上地址已经没有此版本的所有资源包，故需先找到现在的托管地址，于是沿着上述手动地址123456sudo cp /etc/apt/sources.list /etc/apt/sources.list_backupsudo vim /etc/apt/sources.list:%s/http:\/\/security.ubuntu.com\/ubuntu/http:\/\/old-releases.ubuntu.com\/ubuntu/g:%s/http:\/\/us.archive.ubuntu.com\/ubuntu/http:\/\/old-releases.ubuntu.com\/ubuntu/gsudo apt-get updatesudo apt-get install grub grub: Conflicts: grub-pc but 1.98-1ubuntu13 is to be installedgrub-installer: Depends: cdebconf-udeb but it is not installablegrub-pc: Conflicts: grub (&lt; 0.97-54) but 0.97-29ubuntu60.10.04.2 is to be installed12345sudo apt-get -f installsudo apt-get autoremovegrub --versionsudo apt-get install qemuqemu --version bootdisk/* no such file or directory此文件夹是启动文件，需要在其github上下载，由于在虚拟机内部使用git clone无法连接（暂未找出原因）故设置同步文件夹后从本地git123456#config the Vagrantfile:config.vm.synced_folder "/home/jerry/unix", "/home/vagrant"# vagrant --provision reloadcd unixgit clone https://github.com/SamyPesse/How-to-Make-a-Computer-Operating-System.gitcd How-to-Make-a-Computer-Operating-System/src/sdk 系统挂载后无法操作无法退出只显示加载过程正确，以及hello world例程，由于作者未写完，未能展示操作系统可操作性和基本运行调度的实现效果。 Reference[1] samypesse.how-to-create-an-operating-system[EB/OL].https://samypesse.gitbooks.io/how-to-create-an-operating-system .2015.]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LNMP]]></title>
    <url>%2Fen%2FLNMP%2F</url>
    <content type="text"><![CDATA[nginx传统基于线程提交请求可扩展的事件异步驱动反向代理服务器（邮件代理、通用TCP/UDP代理服务器） intall nginx123456sudo vim /etc/apt/sources.list# append to the enddeb http://nginx.org/packages/ubuntu/ xenial nginxdeb-src http://nginx.org/packages/ubuntu/ xenial nginx# update sourcessudo apt-get update W: GPG error: http://nginx.org/packages/ubuntu xenial InRelease: The following signatures couldn&#39;t be verified because the public key is not available: NO_PUBKEY ABF5BD827BD9BF62 123456789# refer:https://www.nginx.com/resources/wiki/start/topics/tutorials/install/sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $keysudo apt-get update # Warning again# browser and copy the key via http://nginx.org/keys/nginx_signing.keysudo vim nginx_signing.key # paste the keysudo apt-key add nginx_signing.keysudo apt-get update # OK# installsudo apt-get install nginx configure nginxSetting Up a Simple Proxy Server,8080-&gt;801234567891011121314151617181920sudo vim /etc/nginx/nginx.conf# comment the http block# add http &#123; server &#123; listen 80; location / &#123; proxy_pass http://localhost:8080/; &#125; location ~ \.(gif|jpg|png)$ &#123; root /data/images; &#125; &#125; server &#123; listen 8080; root /data/up1; location / &#123; &#125; &#125;&#125; new a html12cd /data/up1vim index.html 12sudo nginx -tsudo nginx -s reload access content correctly through intranet IP Setting Up FastCGI Proxying1234567891011121314151617181920212223cat /etc/nginx/nginx.confuser nginx;worker_processes 1;error_log /var/log/nginx/error.log warn;pid /var/run/nginx.pid;http &#123; server &#123; location / &#123; fastcgi_pass localhost:9000; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param QUERY_STRING $query_string; &#125; location ~ \.(gif|jpg|png)$ &#123; root /data/images; &#125; &#125;&#125;events &#123; worker_connections 1024;&#125; phpinstall php123456# 1.Obtain and unpack the PHP source:wget http://cn.php.net/distributions/php-7.2.13.tar.gztar zxf php*# 2.Configure and build PHP.cd php*./configure --enable-fpm --with-mysqli checking for cc... no checking for gcc... no configure: error: in `/home/vagrant/php-7.2.13&#39;: configure: error: no acceptable C compiler found in $PATH1234wget https://mirrors.ustc.edu.cn/gnu/gcc/gcc-8.2.0/gcc-8.2.0.tar.gz # need to take more steps in the official way above and try again another day.sudo apt-get install gcc # Not necessarily up-to-date./configure --enable-fpm --with-mysqli configure: error: libxml2 not found. Please check your libxml2 installation.1234567sudo apt-get install libxml2 # do not work# If you want to compile software from source based on libxml2 you need the development files:sudo apt-get install libxml2-dev # OKsudo apt-get install makemake -vmakesudo make test FAILED TEST SUMMARYTimeout within function [tests/basic/timeout_variation_1.phpt]Timeout within shutdown function, variation [tests/basic/timeout_variation_10.phpt]Timeout within eval [tests/basic/timeout_variation_3.phpt]Timeout within call_user_func [tests/basic/timeout_variation_4.phpt]Timeout within function containing exception [tests/basic/timeout_variation_5.phpt]Timeout within shutdown function [tests/basic/timeout_variation_9.phpt]Timeout again inside register_shutdown_function [tests/lang/045.phpt] 12345678910111213141516171819202122sudo make installInstalling shared extensions: /usr/local/lib/php/extensions/no-debug-non-zts-20170718/Installing PHP CLI binary: /usr/local/bin/Installing PHP CLI man page: /usr/local/php/man/man1/Installing PHP FPM binary: /usr/local/sbin/Installing PHP FPM defconfig: /usr/local/etc/Installing PHP FPM man page: /usr/local/php/man/man8/Installing PHP FPM status page: /usr/local/php/php/fpm/Installing phpdbg binary: /usr/local/bin/Installing phpdbg man page: /usr/local/php/man/man1/Installing PHP CGI binary: /usr/local/bin/Installing PHP CGI man page: /usr/local/php/man/man1/Installing build environment: /usr/local/lib/php/build/Installing header files: /usr/local/include/php/Installing helper programs: /usr/local/bin/ program: phpize program: php-configInstalling man pages: /usr/local/php/man/man1/ page: phpize.1 page: php-config.1Installing PEAR environment: /usr/local/lib/php/Installing PDO headers: /usr/local/include/php/ext/pdo/ You may want to add: /usr/local/lib/php to your php.ini include_path configure php123456789101112131415# 3.Obtain and move configuration files to their correct locationssudo cp php.ini-development /usr/local/php/php.inisudo cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.confsudo cp sapi/fpm/php-fpm /usr/local/bin# 4.prevent arbitrarily script injectionsudo vim /usr/local/php/php.inicgi.fix_pathinfo=0 # line 769# 5.php-fpm.confsudo vim /usr/local/etc/php-fpm.conf# append in the end; Unix user/group of processes; Note: The user is mandatory. If the group is not set, the default user's group; will be used.user = www-datagroup = www-data 12# start php-fpm/usr/local/bin/php-fpm ERROR: Unable to globalize &#39;/usr/local/NONE/etc/php-fpm.d/*.conf&#39; (ret=2) from /usr/local/etc/php-fpm.conf at line 125.The official error here should be changed to:123456789cd /usr/local/etcsudo vim php-fpm.conf# modify in the endinclude=/usr/local/etc/php-fpm.d/*.conf# sudo cp php-fpm.d/www.conf.default php-fpm.d/www.confsudo vim php-fpm.d/www.conf# line 23user = www-datagroup = www-data 1sudo /usr/local/bin/php-fpm # OK configure nginx to support php1234567891011121314151617181920212223242526# 6.nginx.confsudo vim /etc/nginx/nginx.confhttp &#123; server &#123; listen 80; server_name learn.lea; location / &#123; root /data/www; index index.php index.html index.htm; &#125; location ~* \.php$ &#123; fastcgi_index index.php; fastcgi_pass 127.0.0.1:9000; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param SCRIPT_NAME $fastcgi_script_name; &#125; location ~ \.(gif|jpg|png)$ &#123; root /data/images; &#125; &#125;&#125;events &#123; worker_connections 1024;&#125; test12sudo echo "&lt;?php phpinfo(); ?&gt;" &gt;&gt; /usr/local/nginx/html/index.php# navigate to http://learn.lea File not found123sudo vim /etc/nginx/nginx.conf# add "root /data/www" directive to PHP location blocksudo nginx -s reload # OK restart the machine: nginx start automaticllyphp-fpm need to start]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>php</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[install node]]></title>
    <url>%2Fen%2Finstall%20node%2F</url>
    <content type="text"><![CDATA[1 Install Node.js via binary archive on Linux64 system ubuntu 16.04(vagrant box) version Linux Binaries (x64) v10.15.0(LTS) 1.1 Unzip the binary archive123456VERSION=v10.15.0DISTRO=linux-x64sudo mkdir /usr/local/lib/nodejswget https://nodejs.org/dist/$VERSION/node-$VERSION-$DISTRO.tar.xzsudo tar -xJvf node-$VERSION-$DISTRO.tar.xz -C /usr/local/lib/nodejssudo mv /usr/local/lib/nodejs/node-$VERSION-$DISTRO /usr/local/lib/nodejs/node-$VERSION 1.2 Set the environment variable1234export NODEJS_HOME=/usr/local/lib/nodejs/node-$VERSION/binexport PATH=$NODEJS_HOME:$PATH# Refresh profile. ~/.profile 1.3 Test installation123node -vnpm versionnpx -v 1.4 Create a sudo link123sudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/node /usr/bin/nodesudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/npm /usr/bin/npmsudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/npx /usr/bin/npx 2Installing Node.js via package manager system ubuntu 16.04(vagrant box) version v10.15.0(LTS) 12curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -sudo apt-get install -y nodejs 3 Cnpm12npm install -g cnpm --registry=https://registry.npm.taobao.orgcnpm version CNPM command fails after shutdown and restart，so12345alias cnpm="npm --registry=https://registry.npm.taobao.org \--cache=$HOME/.npm/.cache/cnpm \--disturl=https://npm.taobao.org/dist \--userconfig=$HOME/.cnpmrc"# OK 4Change version12cnpm install n -gsudo n stable Reference[1] nodesource.Node.js Binary Distributions[EB/OL].https://github.com/nodesource/distributions/blob/master/README.md .2019.[2] nodejs. How to install Node.js via binary archive on Linux?[EB/OL]. https://github.com/nodejs/help/wiki/Installation .2018.[3] taobao. 淘宝 NPM 镜像使用说明[EB/OL]. https://npm.taobao.org/ .2014-2016[4] tj. n – Interactively Manage Your Node.js Versions[EB/OL]. https://www.npmjs.com/package/n .2018.]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git reference]]></title>
    <url>%2Fen%2Fgit%20reference%2F</url>
    <content type="text"><![CDATA[upload12345git initgit add .git commit -m "message"git remote add origin https://github.com/user/repo.gitgit push -u origin master connect github with no password123456git config --global user.name "makergyt"git config --global user.email "me@makergyt.com"# testgit config --listuser.email=me@makergyt.comuser.name=makergyt ssh1234567git remote add origin git@github.com:user/repo.gitcd ~/.sshssh-keygen -t rsa -C "me@makergyt.com"cat id_rsa.pub # paste to https://github.com/settings/keys# testssh -T git@github.comHi MakerGYT! You've successfully authenticated, but GitHub does not provide shell access https12345678git remote add origin https://github.com/user/repo.gittouch ~/.git-credentialsvim ~/.git-credentialshttps://username:password@github.comgit config --global credential.helper storecat ~/.gitconfig[credential] helper = store Coding Webhook deploy1234567ssh-keygen -t rsa -C "me@makergyt.com" #git公钥mkdir /var/www/.sshchown -R www-data:www-data /var/www/.ssh/sudo -Hu www-data ssh-keygen -t rsa #部署公钥cd /var/www/testmkdir hookchown -R www-data:www-data /var/www/test/hook branch management12345678910111213141516# view branchgit branch*master # default# setup local branchgit branch local# test*masterlocal# publish branchgit push origin local:local# change branchgit checkout local# merge branchgit merge master# delete remote branchgit push origin :master github floder is grey,can not open12345678# enter the grey folderll -a.git # delete the foldercd ..git rm -r --cached foldergit add .git commit -m "remove the cache"git push origin master force update local branch123git fetch --allgit reset --hard origin/mastergit fetch]]></content>
      <categories>
        <category>reference</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ssh reference]]></title>
    <url>%2Fen%2Fssh%20reference%2F</url>
    <content type="text"><![CDATA[1 key1ssh -i xxx.pem root@ip 2 ssh 2.1 local123ssh-keygen -t rsacd ~/.sshscp id_rsa.pub root@ip:~/.ssh/id_rsa.pub 2.2 server123cd ~/.sshcat id_rsa.pub &gt;&gt; authorized_keysrm id_rsa.pub 2.3 test1ssh root@ip]]></content>
      <categories>
        <category>reference</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信订阅号开发记录]]></title>
    <url>%2Fzh-CN%2F%E5%BE%AE%E4%BF%A1%E8%AE%A2%E9%98%85%E5%8F%B7%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[问题pm2安装npm install pm2@latest -g测试号重复回复 步骤开发配置验证域名下token,公众号内回复固定内容 nodejs:https://cloud.tencent.com/developer/labs/lab/10196 python:https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1472017492_58YV5 php:https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421135319]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一年，一度]]></title>
    <url>%2Fzh-CN%2F%E4%B8%80%E5%B9%B4%EF%BC%8C%E4%B8%80%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[时间不会等你，到了这个点，总被簇拥起一种该翻篇的感觉，回忆与展望，常常在忙碌的一段时间里，无法解释所作所为，所思所想。顺心的文字堆砌美好，晦涩的反思积聚抗辩。从时间整体来看，不过只是普通的一个节点，不论附加什么样重大的节日属性，依然要继续生活。时间的步伐有三种，过去永远静立不动，最令人怀念；现在像箭一样飞逝，总担心抓不住；未来姗姗来迟，既期待又紧张。如今的人大多数不再也没有机会去经历大风大浪，都生而平凡而渴望不凡,想要成功但没有成功只是努力去成功，平平凡凡，羡慕着可以大起大落；庸庸碌碌，期待着那个有朝一日。这样的阶段充满戾气，只是对幻想充满激情，在比较中磨损锋芒，在论调里身陷囹圄。舆情汹涌的背后常常是个体无力感的集中爆发，不可否认成为其中的助推者，宣泄之后，各回各家我们都曾在这样无关痛痒的鸡毛蒜皮里，乐此不疲地，绵延不绝地，消耗时间。沉浸在这样微妙的“胜利”里，从没想过，在不知不觉之间，已经被别人一骑绝尘。过去一直在走，没想过停也不敢停，急于突出重围，改头换面。大考来临，快即是慢，慢即是快。常常无法定义，究竟是一个积极的悲观主义者，亦或是现实的理想主义者。人，的确是一系列矛盾的综合体，也是一种情绪化的存在，自我产生，自我救赎。陷入抉择的背后，其实已经别无选择而心有不甘，自由的获取绝非不计成本，而是不会囿于成本的限制放弃美好的追求从今天起，我决定做一个纯粹的人。不喂马，不劈柴，纯纯粹粹地为每一分苟活。]]></content>
      <categories>
        <category>thoughts</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[laravel环境配置过程记录]]></title>
    <url>%2Fzh-CN%2Flaravel%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[一、环境配置过程1.开发环境基本环境: 本地主机： (amd64 8G RAM)已安装环境： 1.1 一点认识：开发时会出现本地环境的不确定变数，且一般是唯一的，不利于版本切换。在团队协同中，环境的差异可能导致配合的巨大问题。于是，基于vitual box产生了vagrant,而laravel官方又基于vagrant推出homestead，从而在开发时基于虚拟机工作，本地程序工程映射到虚拟机内，随时可以撤销、共享环境，不会对本地产生影响。这一点认为与python的virtualenv功能类似,也与我《本地“模拟”一台服务器》中的方式类似。 1.2 homestead的安装过程根据其依赖关系，需要依次完成vitualbox、vagrant、homestead的安装与配置，由于ubuntu系统基于Debian GNU/Linux，基本可通过deb安装包进行： vitualbox:https://www.virtualbox.org/wiki/Downloads vagrant:https://releases.hashicorp.com/vagrant/2.2.2/vagrant_2.2.2_x86_64.deb 刚开始采用大部分教程中的apt-get方式，但到后边发现这样安装的版本是1.8.1，与homestead不匹配(require &gt;=2.1.0)，于是采用官方的deb。然后加入laravel的盒子: 1vagrant box add laravel/homestead homestead: 1234git clone https://github.com/laravel/homestead.git cd ~/Homestead git checkout v7.18.0bash init.sh 以上是第一次时采用官方的安装文档，但是由于不可避免的网络问题，更重要的是在并不熟悉laravel的情况下，需要将环境过程尽可能简化与透明，于是采用了适用于国情的 Homestead 安装包：http://download.fsdhub.com/lc-homestead-6.1.1-2018090400.zip 。在回滚上述环境后，重新开始安装：【参考】1234567891011vagrant box remove laravel/homestead#完全清理上述环境及文件wget http://download.fsdhub.com/lc-homestead-6.1.1-2018090400.zipunzip lc-homestead-6.1.1-2018090400.zipcd lc-homestead-6.1.1-2018090400vagrant box add metadata.jsoncd ~git clone https://git.coding.net/summerblue/homestead.git Homesteadcd ~/Homesteadgit checkout v7.8.0bash init.sh 1.3 配置homestead.yaml1subl ~/Homestead/Homestead.yaml 虚拟机设置：为了便于在同一局域网下在手机端查看效果，这里在配置IP时选择与内网同一网段的，ifconfig查得在192.168.0.104，于是设置为192.168.0.100，其他默认.修改网络设置： 123sudo vim /Homestead/scripts/homestead.rb#在第20行改为：config.vm.network :public_network, ip: settings[&quot;ip&quot;] ||= &quot;192.168.0.100&quot; SSH 秘钥登录： 1234ls -al ~/.ssh-rw------- 1 makergyt makergyt 1679 Nov 30 23:56 id_rsa-rw-r--r-- 1 makergyt makergyt 406 Nov 30 23:56 id_rsa.pub#不需要再生成，如没有需ssh-keygen -t rsa -C &quot;email&quot; 于是补充 - ~/.ssh/id_rsa.pub到key 共享文件夹配置默认后在本地主机上新建code文件夹: 12cd ~mkdir code 站点配置： 123sites: - map: homestead.test to: /home/vagrant/Code/Laravel/public 在主机内将域名与IP绑定(即同DNS的作用):123sudo /etc/hosts#最后一行追加：192.168.0.100 homestead.test 数据库配置：默认，对应的用户名/密码是homestead/secret,其实可自行在虚拟机命令行新建 其他均默认 1.4 运行vagrant12345678910pwd/home/makergyt/Homesteadvagrant up#开始一段时间根据配置文件新建主机#登录vagrant ssh#退出exit#关闭homestead(相当于虚拟机关机)vagrant halt 2.生产环境基本环境 Aliyun ECS： (amd64 1G RAM 1 core CPU) 已安装环境： 2.1 一点认识生产环境与开发环境相反，需要非常稳定，部署后一般不变更。首先需要lnmp配置，这里采用针对laravel的脚本，速度很快，然后需要完成ssl证书安装，这里采用certbort 2.2 过程 密钥连接： 123456# 赋予权限chmod 400 xxx.pem# 删除旧信息ssh-keygen -f &quot;/home/makergyt/.ssh/known_hosts&quot; -R 112.74.41.209# 连接 ssh -i /makergyt.pem root@112.74.41.209 脚本安装： 12345wget -qO- https://raw.githubusercontent.com/summerblue/laravel-ubuntu-init/master/download.sh - | bash# 完成后cd laravel-ubuntu-init./16.04/nginx_add_site.sh#项目名即工程文件夹名，会在/var/www下新建 域名即对应访问此虚拟主机的域名，手头有一台云服务器，一个已经备案的com顶级域名,考虑到今后的项目需求，采取解析不同二级域名至同一ECS IP,然后在ECS中新建相应虚拟主机来绑定二级域名。 ssl证书安装12345678$ sudo apt-get update$ sudo apt-get install software-properties-common$ sudo add-apt-repository universe$ sudo add-apt-repository ppa:certbot/certbot$ sudo apt-get update$ sudo apt-get install python-certbot-nginx $ sudo certbot --nginx #这里可检测到已经新建的多个主机并同时安装$ sudo certbot renew --dry-run #日后更新 修改nginx配置文件,,开启80(http)强转443(https)：123pwd /etc/nginx/sites-enabledsudo vim cloud-doc.conf 文件如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546server&#123; listen 80; server_name cloud-doc.makergyt.com; rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent; &#125;server &#123; listen 443; server_name cloud-doc.makergyt.com; ssl on; ssl_certificate /etc/letsencrypt/live/makergyt.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/makergyt.com/privkey.pem; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; index index.html index.htm index.php; charset utf-8; location / &#123; root /var/www/cloud-doc/public; try_files $uri $uri/ /index.php?$query_string; &#125; location = /favicon.ico &#123; access_log off; log_not_found off; &#125; location = /robots.txt &#123; access_log off; log_not_found off; &#125; access_log /var/log/nginx/cloud-doc.log; error_log /var/log/nginx/cloud-doc-error.log error; sendfile off; client_max_body_size 100m; location ~ \.php$ &#123; root /var/www/cloud-doc/public; fastcgi_split_path_info ^(.+\.php)(/.+)$; fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name; fastcgi_param DOCUMENT_ROOT $realpath_root; fastcgi_intercept_errors off; fastcgi_buffer_size 16k; fastcgi_buffers 4 16k; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; &#125; location ~ /\.ht &#123; deny all; &#125;&#125; 二、部署项目这里部署一个微信小程序项目【云文档】 1. 本地测试 新增网站到vagrant主机在homestead.yaml中新增site:12map: cloud-doc.test to: /home/vagrant/code/cloud-doc/public 在主机/etc/hosts后追加：1192.168.0.100 cloud-doc.test 启动vagrant并登录：123vagrant provisionvagrant upvagrant ssh 在虚拟主机内完成源码下载，数据库相应工作：12345678910git clond https://github.com/SmallRuralDog/cloud-doc-server.git /code/cloud-doccd /code/cloudocunzip cloud_doc_server.zipmysql -u root -pmysql&gt; create database cloudoc; #创建数据库mysql&gt; create user &apos;cloud-doc&apos;@&apos;%&apos; identified by &apos;cloud-doc&apos;; #创建用户mysql&gt; grant all on cloudoc.* to &apos;cloud-doc&apos;@&apos;%&apos;; #授权mysql&gt; flush privileges;mysql&gt; use cloudoc;mysql&gt; source cloud_doc_server.sql 修改源码，【参考】1234sudo vim /config/database.php#采用本地，修改app.php,admin.php中url:&apos;http://cloud-doc.test&apos;#修改wx.php 赋予根目录 storage 目录可写权限：1chmod -R 777 storage 在主机访问cloud-doc.test和同局域网下终端访问192.168.100 2.部署上线将修改后的源码传至服务器1scp -r -i makergyt.pem cloud-doc root@112.74.41.209:/var/www 在服务器配置数据库、赋予根目录 storage 目录可写权限过程完全一致 3.小程序配置 下载源码并修改12345git clone https://github.com/MakerGYT/cloud-doc.git miniprogramcd miniprogram sudo vim app.js#修改请求域名const HOST = &quot;https://cloud-doc.makergyt.com&quot;; 同时将此域名在小程序平台开发设置中更新修改 4.测试小程序可正常通过请求api获取文档信息，但是用户无法登录，经检查，提示错误：1Call to undefined function App\Extend\WxApp\mcrypt_module_open() 是因为mcrypt_module_open()函数在7.1中被贬低，将在7.2中被移除，要用openssl_decrypt()函数代替，参考https://blog.csdn.net/haibo_j/article/details/80759706 将app/Extend/WxApp/Prpcrypt.php中第35~42行修改为：1$decrypted = openssl_decrypt($aesCipher, &apos;AES-256-CBC&apos;, $this-&gt;key, OPENSSL_RAW_DATA|OPENSSL_ZERO_PADDING, $aesIV); 不再报错，但仍无法登录，需进一步检查源码]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[观影《新世界》]]></title>
    <url>%2Fzh-CN%2F%E8%A7%82%E5%BD%B1%E3%80%8A%E6%96%B0%E4%B8%96%E7%95%8C%E3%80%8B%2F</url>
    <content type="text"><![CDATA[新世界 신세계 (2013)导演: 朴勋政 编剧: 朴勋政 主演: 李政宰IMDb: http://www.imdb.com/title/tt2625030 绕过主人公，有几个点值得讨论： 1.民族性：这部影片有几处提到了金门内部有几位重要人物是华侨，特别是两次介绍男主履历时。而且在结尾姜科长在派遣李子成卧底任务时，提到“华侨身份正合适”，看到这里不由得猜想影片似乎有意诱导观众去思考为什么总是华侨。从一定层面来说，外来者、偷渡者往往也是社会不安的因素之一，那么这里是不是在解释或是转嫁形成这些势力的原因呢？另一方面就是延边杀手这一形象，极尽讽刺意味，在遇到一些不干净的“处理”任务时，丁青和后来的李子成都选择了“延边的棒子”。在其出场时充满戏谑，不合身的阔绰服装，奇怪丑陋的面相，愚钝的仪态，尤其是在丁青葬礼上的吃相，很难将他们与这种刀口舔血的生意联系在一起。他们没有金门人的头脑，或许是简单到原始社会的生存方式，将这种差事视为挣钱本领，动手时丝毫没有美国大片中那种冷血， 却也毫无顾忌甚至于搞笑，这一点在灭口局长时尤其突出。这样看来，似乎有意无意的传达出了一种信号。 2.姜科长这一角色塑造自认为及其成功，甚至胜于主人公，既表现其周旋的阴谋心理，也有正人君子的一面，既像工作狂人也期望早点辞职。这一形象让我想起在国内电视剧《夜奔》中杜志国饰演的骆迦山，他们的工作方式完全脱离“组织原则”，用接近流氓的方式对付流氓，最终也不幸都倒在流氓的刀下。姜科长在这样的局面下，也陷入了极度不信任，为保证卧底安全性更重要的是可靠，他不断将更多的人编织进这张深渊中的网。那么他期望的真的是能够达到力量平衡服从管制而不是一网打尽？在这种周而复始、此消彼长的势力斗争中，或许已经麻木而渴望平衡的牵制局面，正如《夜奔》中张所长在前期处理火并的态度上一致，长期没有强有力的力量介入解决，一线的他们无力也无奈。当然，这部影片最终没有迎合观众邪不压正的思维，我们可以也有理由认为这一切是源自资本主义制度的腐朽。 3.丁青起初出场时认为这是一个纨绔公子或者就是个流氓混混，轻浮粗鲁，然而排行老三的他对局势有着自己一定的把控，并非表面上的无能之辈，在警方想将其作为傀儡是，他说“真以为我无能？”。而后便手脚麻利的查出身边卧底并暴露其凶狠本性。电影多次提到“大哥“，但直到最后这一称呼才有了深刻内涵，明知李子成身份却想着设法保全其性命，已经完全超出了利益与自身考量，不过影片末尾也解释了这种情义的来源。或许观看不细致，产生几点问题：1.谁杀死了会长2.是哪一根稻草压垮了李子成的信念，妻子流产吗？3.李子成有实力坐稳吗4.卧底在面对犯罪任务时，按原则该如何处理。如《无间道》中倪永孝旁边的张耀扬在处理”任务“时，显得”干练“而毫无犹豫。 二手翻译，难免与原作理解产生出入]]></content>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络代理初探记录]]></title>
    <url>%2Fzh-CN%2F%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E5%88%9D%E6%8E%A2%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[一、概述：主要由两部分组成:服务端(中介)和客户端 二、准备材料： 资金：&gt;=$10 Paypal账户：绑定信用卡 本地工具：ubuntu terminal(用到ssh,ftp,git) 三、开工：3.1 服务端配置3.1.1 注册vultr账户 Vultr, founded in 2014, is on a mission to empower developers and businesses by simplifying the deployment of infrastructure via its advanced cloud platform. 注册链接https://www.vultr.com/?ref=7533527 该服务商采用的是先充值后消费，按量计费。然后deploy一台服务器，规格如下： Server Location New York (NJ) Server Type Ubuntu 16.04 x64 Server Size 25 GB SSD 1 CPU 1024MB Memory 1000GB Bandwidth （ $5/month） Other options Temporary default 完成后会生成随机密码（不支持直接修改），通过提供的console或远程shell工具登录服务器后修改root用户密码(sudo passwd root)。 3.1.2 安装安装SS 123456#install basic pip dependency:apt install python-pip #default 8.1.1pip install --upgrade pip #to 18.1 close current terminal and restartpip install setuptools#start core workpip install shadowsocks 或者12345#install:shadowsocks-libevsudo apt-get install software-properties-common -ysudo add-apt-repository ppa:max-c-lv/shadowsocks-libev -ysudo apt-get updatesudo apt install shadowsocks-libev 在/etc下新建一个配置文件1vim /etc/shadowsocks.json 配置内容如下：12345678910&#123;"server": "3.1.1中server的公网ip","server_port": 8388,#注册端口范围1024~65535内均可"local_address": "127.0.0.1","local_port": 1080,"password": "客户端用来连接的密码","timeout": 300,"method": "aes-256-cfb","fast_open": false&#125; 如需多人使用，配置内容如下端口1和端口2填两个不同的端口，如8388 8389密码1和密码2是两个端口对应的登录密码，可不同undefined 保存配置文件后，启动服务端1ssserver -c /etc/shadowsocks.json -d start 本地测试服务端是否可连接telnet ip地址 8388，若不通需在服务器中配置防火墙，永久开启此TCP端口，官方安全组配置无效。 3.1.3 bbr 加速3.1.3.1 升级内核3.1.3.2 修改系统变量：12345678sudo echo "net.core.default_qdisc=fq" &gt;&gt; /etc/sysctl.confsudo echo "net.ipv4.tcp_congestion_control=bbr" &gt;&gt; /etc/sysctl.conf#保存生效sysctl -p#测试sysctl net.ipv4.tcp_available_congestion_control#如果返回结果，则开启成功net.ipv4.tcp_available_congestion_control = bbr cubic reno 3.2 客户端配置3.2.1 GUI客户端:Windows、Mac、Android、iOS版本https://github.com/shadowsocks/shadowsocks/wiki/Ports-and-Clients 3.2.2 ubuntu客户端3.2.2.1 基础配置123456789101112131415161718192021#首先需要保证网络是畅通的，然后更新软件源：sudo apt-get update#安装python-pipsudo apt-get install python-pip#安装sssudo pip install shadowsocks#配置sssudo vim /etc/shadowsocks.json# shadowsocks.json&#123; "server": "同3.2.1服务器公网ip", "server_port": 同3.2.1服务器端口, "local_address": "127.0.0.1", "local_port": 1080, "password": "同3.2.1SS密码", "method": "aes-256-cfb", "fast_open": true, "timeout":300&#125;#启动SSsudo sslocal -c /etc/shadowsocks.json 上述命令执行后，此终端不能关闭，可通过nohup/setsid实现后台运行，通过rc.local实现开机自启(此处考虑日常访问实际未采用)。 3.2.2.1 privoxy配置privoxy实现将sock5代理映射为http代理12345678910111213#安装privoxysudo apt-get install privoxy#配置privoxyvim /etc/privoxy/config# config：#4.1节取消注释`listen-address localhost:8118`#5.2节末尾加入 `forward-socks5 / 127.0.0.1:1080 .`#重启privoxy服务sudo /etc/init.d/privoxy restart#开机自启privoxy服务systemctl enable privoxy#查看privoxy服务状态systemctl status privoxy 3.2.2.2 代理配置实现终端内可访问 终端代理将以下代码追加到/etc/profile中或者~/.bashrc中123export http_proxy="127.0.0.1:8118"export https_proxy="127.0.0.1:8118"export ftp_proxy="127.0.0.1:8118" 接着执行source /etc/profile或者source ~/.bashrc 浏览器代理在浏览器的proxy settings中手动配置如下：firefox为例 Http Proxy 127.0.0.1 8118 SSL Proxy 127.0.0.1 8118 ftp Proxy 127.0.0.1 8118 sockets Proxy 127.0.0.1 8118 勾选Use this proxy server for all protocols 全局代理在ubuntu setting-&gt;Network-&gt;Network proxy,method选择Manual，代理配置项与上述浏览器一致。开启3代理后即终端或是浏览器上网均走代理，可根据访问位置选择代理方式。 四、测试终端内开启后可wget一个 foreign domain检验其index.html是否可下载，浏览器访问网站请求时，shadowsocks服务窗口会显示当前请求信息andriod或pc点击开启后，浏览器访问foreign domain测试 五、进阶通过使用shadowsocks-manager构建多用户管理和流量控制界面,普通用户可直接通过https://vpn.makergyt.com注册使用，省去配置服务端工作，也可为维护者带来一定收益。 Reference[1]Geyh.Ubuntu系统SS搭建配置.51CTO.2018.[2]EXP.Centos + Shadowsocks客户端 + Privoxy实现外网访问.exp-blog.2018,]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>shadowsocks</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装双系统记录]]></title>
    <url>%2Fzh-CN%2F%E5%AE%89%E8%A3%85%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[1 当前环境联想lenovo G50:4G+4G(自行扩展)内存，512G机械硬盘，128G SSD 64位i5CPU 2 使用工具： 系统盘刻录：rufus 3.2(类似刻录工具有ultraiso，老毛桃、大白菜之类装机工具虽然集成度高，但比较笨重且不稳定，不便于引导启动系统) U盘：8G USB2.0 （USB规格不影响，容量8G足够） 分区：Disk genius V4.9.6.564 激活工具：MicroKMS_v18.08.09（容易被windows defender识别为病毒并直接删除，需先关闭后下载，执行完后删除，恢复defender） 3 系统版本 Windows 10 pro Version 1803(English)(目前最新稳定版，省去安装后不停更新) Ubuntu 16.04.5 desktop amd64（目前最新版本为18.04，此版本稳定支持各类开源软件） 4 安装模式先安装win到机械盘后安装ubuntu到固态（限于资源，权衡系统使用场景频率协调） 5 详细记录5.1 安装windows5.1.1 准备：5.1.1.0 分区原分区符合当前需求故不重新分，本次采用以下分区： system partition:166G data partition:150G software partition:150G 5.1.1.1 制作系统盘使用rufus刻录系统镜像文件en_windows_10_consumer_editions_version_1803_updated_march_2018_x64_dvd_12063379，配置项默认： partition scheme:GPT target system:UEFI file system:FAT32 5.1.2 安装5.1.2.1 修改启动项重启F2进入BIOS，修改boot启动项，将USB DRIVE（根据名称大致判别引导U盘）修改为第一项（F5上移）,关闭安全启动和快速启动，os scheme 为others,save and quit 5.1.2.2 开始安装 按照guide，修改region和time and input,暂不输入序列号。 选择系统版本为windows pro x64, 进入磁盘选择后，delete原有系统引导启动分区，保证三个分区后分别format,选定size为166G的分区 安装完成后拔除U盘进入个性化设置，跳过联网 其余默认5.1.3 激活系统 连接网络 右下角进入windows defender,暂时关闭threat protection 使1用KMS一键激活，进入control panel-&gt;system，查看激活状态 5.2 安装ubuntu5.2.1 准备：5.2.1.0 分区通过Disk Genius将SSD格式化，4096k对齐，在windows里通过disk management将该磁盘卸载，保持为未挂载状态，稍后安装时再进行分区 5.2.1.1 制作系统盘使用rufus刻录系统镜像文件，ubuntu-16.04.5-desktop-amd64.iso 配置项默认 5.2.2 安装5.2.2.1 修改启动项重启F2进入BIOS，修改boot启动项，将USB DRIVE修改为第一项（F5上移）,关闭安全启动和快速启动，os scheme 为others,save and quit 5.2.2.2 开始安装进入界面后，选择install ubuntu,选择语言及输入法English，安装方式为something else,进入磁盘选择，先对SSD进行分区，选定sdb1中的free partition,+依此分区： / ：30G,primary,ext filesystem,begin swap:8G*2=16384MB,logical, boot:512MB,primary home:left space,logical 选择启动位置为SSD对应的标称,结合容量大小，sdb1 120G根据引导执行后续步骤 5.2.3 修改root密码sudo passwd试用su验证 5.3 验证双系统可正确引导关机重启后可出现unity风格的系统选择界面，第一项为ubuntu，第三项为检测出的windows boot,分别尝试登陆]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《在细雨中呼喊》一个积极的悲观主义者]]></title>
    <url>%2Fzh-CN%2F%E3%80%8A%E5%9C%A8%E7%BB%86%E9%9B%A8%E4%B8%AD%E5%91%BC%E5%96%8A%E3%80%8B%E4%B8%80%E4%B8%AA%E7%A7%AF%E6%9E%81%E7%9A%84%E6%82%B2%E8%A7%82%E4%B8%BB%E4%B9%89%E8%80%85%2F</url>
    <content type="text"><![CDATA[当我虚构的人物越来越真实时，我忍不住会去怀疑自己真正的现实是否在被虚构 主流价值观教育我们，人是无法选择自己的出身过去的，但可以努力创造和改变自己的未来，然而余华说 当人们无法选择自己的未来时，就会珍惜自己选择过去的权利。回忆的动人之处就在于可以重新选择，可以将那些毫无关联的往事重新组合起来，从而获得了全新的过去，而且还可以不断地更换自己的组合，以求获得不一样的经历。当一个人独自坐在公园的长椅上。在日落时让嘴角露出一丝微笑，他孤独的形象似乎值得同情，然而谁又能体会到他此时的美妙旅程？他正坐在回忆的马车里，他的生活重新开始了，而且这一次的生活是他自己精心挑选的。 从乡土中来，最后回归乡土。余华的作品往往是“细小的”，这细小之处在于它着眼于一个小众的灵魂人物，一个偏僻的小视野；但也是“宏大的”，这宏大之处在于故事跌宕起伏，甚至于荡气回肠。他并没有强说这种情节的普遍性，但就不经意就看到了一些广度。《活着》是这样，《许三观卖血记》也是如此。总的来说，总有一种仿佛“医院”的氛围，有人呻吟，有人力图救治，但大部分人已经麻木，忍受着苦难并习以为常。 正如张晓龙谈到，中国人面临的问题比存在感还低一个层次，是“生存感”。但中国有这一的一个群体，他们既有生存感的压力，又有存在感的渴望。当然，我对他用屌丝来概括这样一类人不置可否。这种表达在贾樟柯《天注定》中也极为强烈，如果说曾经可以用时代变革映射下的个体位置来解释，那么现在将余华、贾樟柯、张晓龙对个体的表述对照起来审视，就不能简单用时代来笼统地阐释。未完待续]]></content>
      <categories>
        <category>book</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[凡是过往，皆为序章]]></title>
    <url>%2Fzh-CN%2F%E5%87%A1%E6%98%AF%E8%BF%87%E5%BE%80%EF%BC%8C%E7%9A%86%E4%B8%BA%E5%BA%8F%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[因过竹院逢僧话，偷得浮生半日闲。 有一个夜晚，我烧毁了所有的记忆，从此我的梦就透明了，有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。 N32°49′32.60″，E109°21′48.60″]]></content>
      <categories>
        <category>thoughts</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[越是进入一个深度，越是觉得能力撑不起野心。]]></title>
    <url>%2Fzh-CN%2F%E8%B6%8A%E6%98%AF%E8%BF%9B%E5%85%A5%E4%B8%80%E4%B8%AA%E6%B7%B1%E5%BA%A6%EF%BC%8C%E8%B6%8A%E6%98%AF%E8%A7%89%E5%BE%97%E8%83%BD%E5%8A%9B%E6%92%91%E4%B8%8D%E8%B5%B7%E9%87%8E%E5%BF%83%E3%80%82%2F</url>
    <content type="text"><![CDATA[Welcome to my blog, enter password to read. Incorrect Password! No content to display! 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]]></content>
  </entry>
  <entry>
    <title><![CDATA[本地“模拟”一台服务器记录]]></title>
    <url>%2Fzh-CN%2F%E6%9C%AC%E5%9C%B0%E2%80%9C%E6%A8%A1%E6%8B%9F%E2%80%9D%E4%B8%80%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[手头有租用阿里云的centos7的服务器，但目前它的角色既是实验机又是生产环境，感觉这样不太合适，于是产生了下面的需求 在本地电脑上通过安装虚拟机，实现模拟与操作远程服务器一样的情形，这样将实验环境和生产环境隔离开，也起到本地验证的作用，提高项目的稳定性和安全性 1 前言其实，顾名思义模拟操作，跟配置远程的服务器/虚拟主机操作是一模一样的，区别在于网络： 远程服务器是有一个公网IP，也就是我们可以从其他联网的IP访问到它 本地虚拟机是使用宿主机的网络，因而它分到的IP地址是一个内网IP，也就是说只能通过宿主机访问到。这一点就如同你用手上的设备访问路由器一样。 那么，基于网络的差异，也就决定了需要做以下两点： 设置好虚拟机的网络 改变某些参数使得宿主机能访问到“服务器” 1.1 当前环境 系统：windows 10 pro 1703 工具：VMware® Workstation 12 Pro 服务器系统:centos 7.4.1 服务器环境：Apache 2.4.6 \ php-5.4.16 \ MariaDB-5.5.56 (phpmyadmin 4.4.15.10) 已测试且仅成功测试以上环境 1.2 名词约定 宿主机：物理机，即本地电脑 2 开工2.1 新建虚拟机在此之前，已经熟悉VMware且新建了一台适合centos64位的虚拟机这里需要注意两点： 如果跳出不支持虚拟化，请在开机进入BIOS将virtual选项改为enable，具体机型具体百度 选择自定义(高级)： 安装来源：稍后安装操作系统 选择客户机操作系统：CentOS 64位 位置：不要含中文、特殊字符、空格(所有软件安装不出错的基础要求【1】) 处理器配置、内存、磁盘容量：由于模拟，我设置跟服务器一样的 网络类型：使用桥接网络*其余基本一路默认 2.2 安装操作系统 开启后，两项安装方式都可以，我这里选择第一项，Install CentOS 7 安装语言我选择默认，English，避免乱码字符(所有软件安装不出错的基础要求【2】) 安装信息摘要： 语言支持把Chinese加上 基本环境由于是模拟，选择最小安装，从头体验配置的操作(这里没有GUI桌面) 安装位置：分区自动配置 其余按提示或默认 完成后重启以root登陆 2.3 配置虚拟机基本2.3.1 开启网络连接先测试一下网络1ping -c 5 202.108.22.5 #ping百度的IP，5次 CentOS 7.4默认安装好之后是没有自动开启网络连接的，因此需要我们更改配置文件来开启网络12345678cd /etc/sysconfig/network-scriptslsifcfg-enXXX ifdown-cth xxxxxxxx···# 这里会列出该目录下所有脚本，注意第一个ifcfg-enXXXvi ifcfg-enXXX···ONBOOT=yes #这里将no改成yes 然后Esc键退出insert模式，:wq保存退出，重启网卡：1234service network start#再次测试ping -c 5 202.108.22.5 #ping百度的IP，5次#有ttl回应，Ctrl+C退出`ping` 2.3.2 安装vim12yum install vim# vim是支持命令行内的编辑器，yum 是一种便捷的安装方式，会自动安装依赖项 2.4 安装LAMP环境2.4.1 安装Apache12345678yum install httpd # Apache的软件包名是httpd，服务名也是# 启动systemctl start httpd.service# 允许开机启动Apachesystemctl enable httpd.service#检查httpd服务状态systemctl status httpd.service#验证：loaded为enables,Active为running 2.4.1.1 防火墙开放tcp端口80：123456firewall-cmd --zone=public --add-port=80/tcp --permanent#重启防火墙firewall-cmd --reload#检查配置是否成功：firewall-cmd --list-all#验证：ports：80/tcp 2.4.1.2 查询当前主机IP:12ip addr#形如192.168.xxx 2中找inet第一个地址 此时，可在宿主机(你的物理机)浏览器访问该IP，会获取Apache欢迎页面 2.4.2 安装php1yum install php 安装完成后，PHP生成三个配置文件 /etc/httpd/conf.d/php.conf 用于被Apache读取 /etc/httpd/conf.modules.d/10-php.conf 用于Apache加载LoadModule指定的模块(PHP模块) /etc/php.ini php针对生产环境和开发环境自身的配置文件 2.4.2.1 重启Apache1systemctl restart httpd 2.4.2.2 测试Apache正常调用PHP12vim /var/www/html/phpinfo.php&lt;?php phpinfo ();?&gt; 宿主机浏览器访问http://ip/phpinfo.php,如果正常的话可以看到php的安装信息 2.4.3 安装MariaDB 从RHEL 7开始Red Hat公司推荐使用MariaDB替换MySQL,基础功能操作一样 1yum install mariadb-server mariadb 2.4.3.1 启动123systemctl start mariadbsystemctl status mariadb# 验证Active为running 2.4.3.2 保护数据库包括设置数据库的 root 密码、移除测试数据库test、移除匿名用户anonymous等12mysqlsecureinstallation#出现提示时自行选择是否移除，这里暂不移除，选择n 2.4.3.3 测试数据库使用 root 账户登录 MariaDB 并用 quit 退出123mysql -u root -pEnter password:MariaDB [(none)]&gt; SHOW VARIABLES; 2.4.3.4 允许远程访问1234MariaDB [(none)]&gt; grant all privileges on *.* to root@'%' identified by 'password' with grant option;#允许任意ip以root身份password访问MariaDB [(none)]&gt; flush privileges;#刷新权限 测试一下在宿主机上navicat访问，我测试时一般连接会迟滞，使用ssh连接正常 2.4.4 安装PhpMyAdmin2.4.4.1 安装库CentOS 7.4 仓库默认没有提供 PhpMyAdmin 二进制安装包。如果不适应使用 MySQL 命令行来管理你的数据库，可以通过下面的命令启用 CentOS 7.4 rpmforge 仓库 来安装 PhpMyAdmin。123yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm#最新链接可在The newest version of ‘epel-release’ for EL7找到yum install phpmyadmin 2.4.4.2 配置配置远程连接，使得能在宿主机上以http://ip/phpmyadmin访问12345678910111213141516171819202122232425262728293031323334353637383940vi /etc/httpd/conf.d/phpMyAdmin.conf&lt;Directory /usr/share/phpMyAdmin/&gt; AddDefaultCharset UTF-8 &lt;IfModule mod_authz_core.c&gt; # Apache 2.4 &lt;RequireAny&gt; # Require ip 127.0.0.1 #注释掉 # Require ip ::1 #注释掉 Require all granted #新添加 &lt;/RequireAny&gt; &lt;/IfModule&gt; &lt;IfModule !mod_authz_core.c&gt; # Apache 2.2 Order Deny,Allow Deny from All Allow from 127.0.0.1 Allow from ::1 &lt;/IfModule&gt;&lt;/Directory&gt;&lt;Directory /usr/share/phpMyAdmin/setup/&gt; &lt;IfModule mod_authz_core.c&gt; # Apache 2.4 &lt;RequireAny&gt; #Require ip 127.0.0.1 #注释掉 #Require ip ::1 #注释掉 Require all granted #新添加 &lt;/RequireAny&gt; &lt;/IfModule&gt; &lt;IfModule !mod_authz_core.c&gt; # Apache 2.2 Order Deny,Allow Deny from All Allow from 127.0.0.1 Allow from ::1 &lt;/IfModule&gt;&lt;/Directory&gt;#保存退出systemctl restart httpd 测试一下并登录http://ip/phpmyadmin 3 完工现在可以使用xshell访问，xftp连接模拟上传下载文件，网站文件放在 /var/www/html下。也就是说开启VM让虚拟机跑起来，然后就可以忽略它是虚拟机的存在。]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装pthreads多线程扩展记录]]></title>
    <url>%2Fzh-CN%2F%E5%AE%89%E8%A3%85pthreads%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%89%A9%E5%B1%95%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[1 当前环境 WampServer Version 3.1.0 64bit PHP 5.6.31 windows 10 pro 1703 pthreads-2.0.9-5.6-ts-vc11-x645.6对应php version,vc11代表是Visual Studio 2010 compiler编译器编译的(暂无需考虑)，x64代表wamp平台。 2 安装只用到下载包内的pthreadVC2.dll和php_pthreads.dll 2.1 修改php.ini12// php.iniextension=php_pthreads.dll //加在最后一行 2.2 复制pthreadVC2.dll到%wamp%\bin\php\%php5.6.31%和%wamp%\bin\apache\%apache2.4.27%wamp%为WampServer安装路径，%php5.6.31%为对应的php版本路径,%apache2.4.27%为对应的apache版本路径 2.3 复制php_pthreads.dll到%wamp%\bin\php\\bin\php\%php5.6.31%\ext,%wamp%为WampServer安装路径，%php5.6.31%为对应的php版本路径。 2.4 重启wamp所有服务。3 测试12345678910111213141516171819// AsyncOperation.php&lt;?php class AsyncOperation extends Thread &#123; public function __construct($arg)&#123; $this-&gt;arg = $arg; &#125; public function run()&#123; if($this-&gt;arg)&#123; printf("Hello %s\n", $this-&gt;arg); &#125; &#125; &#125; $thread = new AsyncOperation("World"); if($thread-&gt;start()) $thread-&gt;join(); ?&gt; php AsyncOperation.phpHelloWorld #则配置成功 4 实验 目的：检测多线程和普通方式的时间消耗 例程：for循环爬取百度 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273&lt;?php class test_thread_run extends Thread &#123; public $url; public $data; public function __construct($url) &#123; $this-&gt;url = $url; &#125; public function run() &#123; if(($url = $this-&gt;url)) &#123; $this-&gt;data = model_http_curl_get($url); &#125; &#125; &#125; function model_thread_result_get($urls_array) &#123; foreach ($urls_array as $key =&gt; $value) &#123; $thread_array[$key] = new test_thread_run($value["url"]); $thread_array[$key]-&gt;start(); &#125; foreach ($thread_array as $thread_array_key =&gt; $thread_array_value) &#123; while($thread_array[$thread_array_key]-&gt;isRunning()) &#123; usleep(10); &#125; if($thread_array[$thread_array_key]-&gt;join()) &#123; $variable_data[$thread_array_key] = $thread_array[$thread_array_key]-&gt;data; &#125; &#125; return $variable_data; &#125; function model_http_curl_get($url,$userAgent="") &#123; $userAgent = $userAgent ? $userAgent : 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2)'; $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); curl_setopt($curl, CURLOPT_TIMEOUT, 5); curl_setopt($curl, CURLOPT_USERAGENT, $userAgent); $result = curl_exec($curl); curl_close($curl); return $result; &#125; for ($i=0; $i &lt; 10; $i++) &#123; $urls_array[] = array("name" =&gt; "baidu", "url" =&gt; "http://www.baidu.com/s?wd=".mt_rand(10000,20000)); &#125; $t = microtime(true); $result = model_thread_result_get($urls_array); $e = microtime(true); echo "多线程：".($e-$t)."\n"; $t = microtime(true); foreach ($urls_array as $key =&gt; $value) &#123; $result_new[$key] = model_http_curl_get($value["url"]); &#125; $e = microtime(true); echo "For循环：".($e-$t)."\n"; ?&gt; 输出1多线程：5.1022920608521 For循环：20.272159099579 #具体时间不一定相同]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装matlab]]></title>
    <url>%2Fzh-CN%2F%E5%AE%89%E8%A3%85matlab%2F</url>
    <content type="text"><![CDATA[无论是分析数据、开发算法还是创建模型，MATLAB 都是针对您的思维方式和工作内容而设计的。 1 winx64平台1.1 教程环境 系统：windows 10pro 1703 版本：matlab R2017b win64 1.2 基础准备 安装虚拟光驱工具，如2345好压附带这一功能 软件iso镜像文件和破解文件，关注“MakerGYT”公众号回复matlab-win 1.3 开始下载文件后，将获得如下文件123456789-|matlab---|R2017b_win64_dvd1.iso #这是镜像1---|R2017b_win64_dvd2.iso #这是镜像2---|crack-----|R2017b -------|bin ---------|netapi32.dll #这是替换文件-----|license_key.txt #这是激活密钥-----|license_standalone.lic #这是离线激活认证文件 1.3.1 加载镜像1然后先将镜像1加载到虚拟光驱（右键,或者直接装载），然后进入光驱文件，以管理员身份运行setup.exe，将跳出安装界面，接下来选择不使用internet，接下来输入激活密钥，后面根据自己选择或执行默认安装，注意路径最好不要含中文或空格。 1.3.2 加载镜像2在安装到60%左右时会提示请插入DVD2,这时先将刚才加载的虚拟光驱卸载（右键弹出），然后以同样方式加载镜像2到虚拟光驱。回到安装界面，点击确定，继续执行安装。 1.3.3 激活文件安装完成后运行matlab，进入激活界面，选择离线激活，将激活认证文件导入，确定，激活完成。 1.3.4 覆盖替换将netapi32.dll文件替换到安装路径里的·bin下位置，完成最后一步。 1.3.5 语言切换默认是半中文界面，可在预设-&gt;常规-&gt;桌面语言中修改 2 linux64平台2.1 教程环境 系统：Ubuntu 16.04 amd64 版本：matlab R2017b glnxa64 2.2 基础准备 软件iso镜像文件和破解文件，关注“MakerGYT”公众号回复matlab-linux 2.3 开始下载文件后，你将获得如下文件，注意，命令中所有makergyt替换为你的用户名1234567-|matlab---|R2017b_glnxa64_dvd1.iso #这是镜像1---|R2017b_glnxa64_dvd2.iso #这是镜像2---|crack-----|libmwservices.so #这是替换文件-----|license_key.txt #这是激活密钥-----|license_standalone.lic #这是离线激活认证文件 2.3.1 创建镜像目录1$ sudo mkdir /media/matlab 2.3.2 加载镜像1123$ sudo mount -o loop R2017b_glnxa64_dvd1.iso /media/matlab/$ cd /media/matlab$ cd .. 安装12345$ sudo /media/matlab/install$ sudo mount -o loop R2017b_glnxa64_dvd2.iso /media/matlab/$ cd /home/Matlab/bin/$ ./matlab$ cd~ 2.3.3 加载镜像2在安装到80%左右时会提示请插入DVD2,这时先将刚才加载的虚拟光驱卸载（右键弹出），然后以同样方式加载镜像2到虚拟光驱。回到安装界面，点击确定，继续执行安装。 2.3.4 激活文件安装完成后运行matlab，进入激活界面，选择离线激活，将激活认证文件导入，确定，激活完成。 2.3.5 覆盖替换12345$ sudo chmod -R 777 Matlab/$ cd crack$ sudo cp libmwservices.so /home/Matlab/bin/glnxa64/$ cd ../$ ./matlab 2.3.6 卸载镜像1$ sudo umount /media/matlab 2.3.7 语言切换默认是半中文界面，可在预设-&gt;常规-&gt;桌面语言中修改 2.3.8 快捷方式在/home/Desktop新建一个文件123456789[Desktop Entry]Encoding=UTF-8Name=Matlab_2017bComment=MATLABExec=/home/makergyt/Matlab/bin/matlabIcon=/home/makergyt/Matlab/bin/glnxa64/cef_resources/matlab_icon.pngStartupNotify=trueType=ApplicationCategories=Application; 在文件属性中permissions-&gt;Allow 获取软件包公众号回复matlab-win/matlab-linux]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 初探]]></title>
    <url>%2Fzh-CN%2FPython%E5%88%9D%E6%8E%A2%2F</url>
    <content type="text"><![CDATA[Life is short,I use Python! 1 学习准备1.1 环境 学习环境：Anaconda 5.0.0 编辑器：sublime text 3143 虚拟机：VMwarePro 12 Linux镜像：Ubuntu 16.04 1.2 基础知识 Python介绍:中 英 计算机语言类型：编译型和解释型的区别 1.3 学习目标 配置Python运行环境，在Anaconda下运行python 了解Python的基础知识及与其他语言的区别及优势 学会配置虚拟机，在linux默认环境下运行python 练习用Python写一个贪吃蛇游戏 1.4 学习资源 慕课：嵩天 教程：廖雪峰 参考：官方文档1.5 一个Python实例代码 12345678#Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=' ')&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000) 2 开始2.1 前言 现在切入正题，首先为什么是要学习python？ 首先因为这是个讲求效率的时代，当然这里Python的效率在于其开发效率，可以试下用其他语言写上面的斐波那契数列。在运行效率上依然C/C++是首位，这是毋庸置疑的。然而在计算资源不再是问题的现在，开发效率显得极其重要。Python没有复杂晦涩的语法概念，它更像是为人类语言设计的，更多的面向算法实现而不是考虑底层实现机制，这与C++或者Java有很大不同。就语言本身来看，它始终基于自身不断迭代而不像其他语言不断新增各种各样的库或者包，让开发者应接不暇。当然也由于要“脱胎换骨“，不得不壮士断腕，于是形成2.7和3.x版本不兼容的”脾气“，这一点也让很多人苦恼。 其次，Python现在太受欢迎了。在今年10月10日召开的Github Universe大会上，根据发布的Github Octoverse报告显示，Python已代替Java从去年的第三突进到了第二（第一是js），新增了40%的Pull。不是我们追风，而是在很多开源项目中，越来越多的开发者选择使用Python，尤其是一些大公司(联盟)主导的开源项目，例如被fork最多的TensorFlow（谷歌开发的深度学习平台），开发者不可避免的要去使用进而也就必须要学习。这是一个提高语言热度的良性循环。因而，正如本文开始提到的，越来越多的开发者在感慨”人生苦短“了。 然后是Python能干什么？ 在此之前，听说过爬虫、图像处理，对，如果使用python编写，这将变得十分容易。在研究领域，Python可以很快的将算法付诸实现，从而让研究者有更多精力去测试并改进算法而不必把时间耗费在语言工具上，这也正是在机器学习领域python更受欢迎的原因。 2.1 准备2.1.1 安装环境主要分为两种， 在windows64平台上,集成了python3.6的Anaconda。点击查看安装步骤，也可以参考这个不过不全面。注意：不用勾选add to environment path和register to …,安装路径不要含中文、空格(这些都在官方文档有所说明) 在Ubuntu16.04平台上，内置的python2.7。在此之前需要先安装VMware,一个虚拟机软件，便于在win平台上运行ubuntu系统。或者你也可以选择安装双系统，当然目前不推荐。注意：一般会遇到两个问题，安装VMtools用于与主机的文件交互，网络无法连接。 其实也可以在一个平台上配置两种版本的环境，不过在当前只是入门的情况下，还是隔离开学习比较好。使用Ubuntu也可以顺便学习linux的基本操作 测试已正确安装 win:找到Anaconda prompt右键管理员运行，键入python,出现欢迎语和版本，前面提示符变为&gt;&gt;,试一下： 12&gt;&gt;&gt;print "hello python"#有结果即安装成功。 linux:左上方找到terminal，键入python,出现欢迎语和版本,前面提示符变为&gt;&gt;,试一下： 12&gt;&gt;&gt;print "hello ubuntu"#有结果即安装成功。 2.1.2 安装sublime win:直接下载安装，默认到底 linux:通过apt方式安装 12345~$ wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -~$ sudo apt-get install apt-transport-https~$ echo &quot;deb https://download.sublimetext.com/ apt/stable/&quot; | sudo tee /etc/apt/sources.list.d/sublime-text.list~$ sudo apt-get update~$ sudo apt-get install sublime-text 2.2 学习基本知识一般学习一门语言，都会从运行机制然后是基础语法入手。为了便于语言选择的迁移，几乎所有语言的基础语法都是类似的，如变量类型、逻辑关系、逻辑式等等，接着是函数定义。因此如果已经系统学习过一门语言，上手其他是很容易的。学习基础语法还是要参考官方文档,更加细致权威，读取差异即可。 2.3练手 爬虫:一个系列 web编程:一个专栏 游戏：实现贪吃蛇游戏 以贪吃蛇游戏为实现样例。 2.3.1 基本环境 系统：Ubuntu16.04 版本：Python2.7 第三方库：pygame1.9.3 编辑器：sublime text3143 效果如图 操作方法：上下左右键或wsad键控制ESC键退出游戏 2.3.2 练习注意：安装库需要pip方式，打开terminal,键入：1234567~$ sudo apt-get install python-pip~$ sudo apt-get install python-pip python-dev~$ sudo pip install --upgrade pip#确认安装好pip：~$ pip -V#会出现版本号即pip安装成功~$ pip install pygame 进入python终端123&gt;&gt;&gt;import pygame&gt;&gt;&gt;print pygame.ver##可看到版本号成功 可以继续在解释器终端编写；也可以先写好snake.py脚本（用sublime,也可以用vim，推荐前者），然后在命令行用python snake.py执行123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103# snake.pyimport pygame,sys,time,randomfrom pygame.locals import *redColour = pygame.Color(255,0,0)blackColour = pygame.Color(0,0,0)whiteColour = pygame.Color(255,255,255)greyColour = pygame.Color(150,150,150)def gameOver(playSurface): gameOverFont = font = pygame.font.SysFont(None, 48) gameOverSurf = gameOverFont.render('Game Over', True, greyColour) gameOverRect = gameOverSurf.get_rect() gameOverRect.midtop = (320, 10) playSurface.blit(gameOverSurf, gameOverRect) pygame.display.flip() time.sleep(5) pygame.quit() sys.exit()def main(): pygame.init() pygame.font.init() fpsClock = pygame.time.Clock() playSurface = pygame.display.set_mode((640,480)) pygame.display.set_caption('Raspberry Snake') snakePosition = [100,100] snakeSegments = [[100,100],[80,100],[60,100]] raspberryPosition = [300,300] raspberrySpawned = 1 direction = 'right' changeDirection = direction while True: for event in pygame.event.get(): if event.type == QUIT: pygame.quit() sys.exit() elif event.type == KEYDOWN: if event.key == K_RIGHT or event.key == ord('d'): changeDirection = 'right' if event.key == K_LEFT or event.key == ord('a'): changeDirection = 'left' if event.key == K_UP or event.key == ord('w'): changeDirection = 'up' if event.key == K_DOWN or event.key == ord('s'): changeDirection = 'down' if event.key == K_ESCAPE: pygame.event.post(pygame.event.Event(QUIT)) if changeDirection == 'right' and not direction == 'left': direction = changeDirection if changeDirection == 'left' and not direction == 'right': direction = changeDirection if changeDirection == 'up' and not direction == 'down': direction = changeDirection if changeDirection == 'down' and not direction == 'up': direction = changeDirection if direction == 'right': snakePosition[0] += 20 if direction == 'left': snakePosition[0] -= 20 if direction == 'up': snakePosition[1] -= 20 if direction == 'down': snakePosition[1] += 20 snakeSegments.insert(0,list(snakePosition)) if snakePosition[0] == raspberryPosition[0] and snakePosition[1] == raspberryPosition[1]: raspberrySpawned = 0 else: snakeSegments.pop() if raspberrySpawned == 0: x = random.randrange(1,32) y = random.randrange(1,24) raspberryPosition = [int(x*20),int(y*20)] raspberrySpawned = 1 playSurface.fill(blackColour) for position in snakeSegments: pygame.draw.rect(playSurface,whiteColour,Rect(position[0],position[1],20,20)) pygame.draw.rect(playSurface,redColour,Rect(raspberryPosition[0], raspberryPosition[1],20,20)) pygame.display.flip() if snakePosition[0] &gt; 620 or snakePosition[0] &lt; 0: gameOver(playSurface) if snakePosition[1] &gt; 460 or snakePosition[1] &lt; 0: for snakeBody in snakeSegments[1:]: if snakePosition[0] == snakeBody[0] and snakePosition[1] == snakeBody[1]: gameOver(playSurface) fpsClock.tick(5)if __name__ == "__main__": main()]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TensorFLow1.3文档中文翻译之1.0.0安装]]></title>
    <url>%2Fzh-CN%2FTensorFLow1-3%E6%96%87%E6%A1%A3%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91%E4%B9%8B1-0-0%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[中文社区并没有及时做到更新，于是边翻译边学习，发现效果很显著，会强迫自己去确保理解了每一部分，以前是常常会跳过。 下面的引导解释了如何安装让你可以使用Python写程序的一个TensorFlow的版本 1 在ubuntu上安装这份引导解释了如何在Ubuntu上安装TensorFlow。这些说明可能在其它Linux版本上也能工作，但是我们目前仅仅在Ubuntu14.04或者之上的版本上（我们也只支持）测试了它们。 2 选择安装哪个Tesorflow版本你必须选择下面的一种来安装： 仅支持CPU。如果你的系统没有NVIDIA® GPU，你只能安装这个版本。注意这个版本更容易去安装（5~10分钟之内），所以即便你有NVIDIA® GPU，我们仍然推荐先安装这个版本。 支持GPU。TensorFlow程序在GPU上比在CPU上运行起来明显要快。因此，如果你的系统有符合下面提到要求的NVIDIA® GPU并且你需要运行更具有良好表现的应用，你终究要安装这个版本。 运行带有GPU支持的TensorFlowN对VIDIA®的要求如果你正在安装支持GPU的TensorFlow使用引导中描述的架构，下面的NVIDIA软件必须安装到你的系统上： CUDA® Toolkit 8.0.对于细节参考英伟达的文档。确保你按照英伟达文档添加相应的Cuda路径到LD_LIBRARY_PATH环境变量里与CUDA Toolkit 8.0关联的英伟达驱动 cuDNN v6.对于细节参考英伟达的文档。确保你按照英伟达文档添加相应的Cuda路径到CUDA_HOME环境变量里 CUDA计算性能3.0及以上的显卡。参考英伟达文档列出的支持的显卡。 libcupti-dev库，它是英伟达CUDA配置工具接口。这个库提供了先进的仿真支持，按照下面的命令： 1sudo apt-get install libcupti-dev 如果你是使用前面列举先前的包，请更新到特定的版本。如果没有更新，你还可以运行支持GPU的TensorFlow，不过仅限于做下面： 按照从源码安装的文档安装。 安装或至少更新到下面版本的英伟达： CUDA toolkit 8.0及以上 cuDNN v3 及以上 CUDA计算性能3.0及以上的显卡 3 选择如何去安装你必须掌握如何安装TensorFlow的机制。下面列出了支持的选择: virtualenv “本地”的pip Docker Anaconda 从源码安装，在单独的引导中有注明 我们推荐这种virtualenv安装。virtualenv是一个虚拟的与其他平台隔离的Python系统，在同一个机器上不会妨碍和被影响其他的Python程序。在virtualenv安装过程中，你将不仅安装TensorFlow还有它的依赖项。（这事实上相当容易）开始用TensorFlow工作时，你仅需激活这个虚拟环境。总而言之，virtualenv提供了一个安全可靠的安装运行TensorFlow的机制。 本地的pip直接在你的系统上安装而不进行任何的包含系统。对于想要在一个多用户系统上让所有人都可以获得TensorFlow的系统管理员，我们推荐这种本地pip安装方式。由于本地的pip安装不是隔离在一个单独的容器中，它可能会加入一些基于Python的安装项到你的系统中。不过，如果你理解了pip和你的Python环境，本地安装仅需要一个命令。 Docker将TensorFlow与在你的机器上与预先的包完全隔离开。Docker包含了TensorFlow和所有它的依赖项。注意Docker镜像可能非常大（有成百上千兆）。如果你正准备将TensorFlow合并到已经使用Docker的更大的应用架构里，你可以选择这种Docker安装方式。 在Anconda中，你可以使用conda（译者注：一个包管理器）创建一个虚拟环境。然而，用Anaconda的话，我们推荐pip install命令，而不是conda install命令。 注意 :conda包是社区支持的，不是官方支持。那就是说，TensorFlow团队没有测试也没有包含上conda包。使用该包的风险要由你承担。 3.1 用vitualenv安装采取下面的步骤来使用vitualenv安装TensorFlow： 键入下面任一指令来安装pip和virtualenv(译者注：对应不同的python版本,2.7或3.x): 12sudo apt-get install python-pip python-dev python-virtualenv # for Python 2.7`sudo apt-get install python3-pip python3-dev python-virtualenv # for Python 3.n` 键入下面的指令创建一个virtualenv环境： 12virtualenv --system-site-packages &lt;em&gt;targetDirectory&lt;/em&gt; # for Python 2.7virtualenv --system-site-packages -p python3 &lt;em&gt;targetDirectory&lt;/em&gt; # for Python 3.n targetDirectory指明了virtualenv树的顶部。我们的介绍会设定targetDirectory是～/tensorflow,你也可以自己选择任何目录。 键入下面的指令来激活virtualenv环境： 12source ~/tensorflow/bin/activate # bash, sh, ksh, or zshsource ~/tensorflow/bin/activate.csh # csh or tcsh 资源符前面会变成这样的提示：(tensorflow)$ 确保pip8.0以上已经安装： 1(tensorflow)$ easy_install -U pip 键入下面任一指令在激活的virtualenv环境中安装TensorFlow: 1234(tensorflow)$ pip install --upgrade tensorflow # for Python 2.7(tensorflow)$ pip3 install --upgrade tensorflow # for Python 3.n(tensorflow)$ pip install --upgrade tensorflow-gpu # for Python 2.7 and GPU(tensorflow)$ pip3 install --upgrade tensorflow-gpu # for Python 3.n and GPU 可选）如果步骤4失败（可能是因为低于8.1版本的pip），按下面格式键入指令在激活的virtualenv环境中安装TensorFlow： 12(tensorflow)$ pip install --upgrade tfBinaryURL # Python 2.7(tensorflow)$ pip3 install --upgrade tfBinaryURL # Python 3.n tfBinaryURL定义了TensorFlow Python包的URL。根据操作系统，Python版本和GPU支持选择合适的tfBinaryURL值。在这里为你系统找合适的tfBinaryURL值。例如，如果你是为Linux,Python 3.4 并且支持GPU,键入下列命令在激活的virtualenv环境中安装TensorFlow：12(tensorflow)$ pip3 install --upgradehttps://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.3.0-cp34-cp34m-linux_x86_64.whl 如果安装遇到问题，参考常见安装问题 4 下一步在安装完TensorFlow后，验证安装。注意每当你使用TensorFlow的时候你必须激活virtual环境。如果该环境当时没有激活，调用下面的指令：12source ~/tensorflow/bin/activate # bash, sh, ksh, or zshsource ~/tensorflow/bin/activate.csh # csh or tcsh 当该环境激活时，你可以从这个shell中运行TensorFlow程序。你的提示将变成下面这样证明tensorflow环境已经激活：1(tensorflow)$ 当你使用完TensorFlow后，调用下面的deactivate函数来停止环境:1(tensorflow)$ deactivate 提示符会翻转成默认的（在PS1环境变量里定义的）。 5 卸载TensorFlow要卸载TensorFLow的话，移除你创建的树。例如：1rm -r targetDirectory 未完待续 Reference[1] Google.tensorflow[EB/OL].https://tensorflow.google.cn .2017.]]></content>
      <categories>
        <category>translate</category>
      </categories>
      <tags>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[建立个人网站]]></title>
    <url>%2Fzh-CN%2F%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[本文概念性内容可能表述不严谨，但不必吹毛求疵，主要以实际操作为主，一些下载资料已附带链接。 1 前言 首先，我们为什么要用到服务器。刚开始入门web的同学可能一直沉浸于使用自己的电脑本地调试出各种奇技淫巧而兴奋不已，然而当你想向他人炫耀一番时，你的方式是什么？打个包发过去，她/他可能还在用IE6，然后你的花哨的页面就没有然后了，当然这也得基于知道你网页入口在哪里。这时，服务器会派上用场，它就相当于一个寄存在遥远天边的电脑，与你桌上那台不同的是，每个人只要可以上网就能访问到里面的内容（当然深入了解还需要端口等知识）。那么，怎么访问呢？我们知道，每个网络上的机器都有一个IP地址，就像这样，127.0.0.1（这是电脑本地的IP），我们可以通过浏览器键入IP访问到它的内容。如果它那台主机配置了域名，你现在暂且可以这样理解，域名与IP是一一对应的关系，域名只是为了便于你记忆，就像baidu.com,大多数人肯定不会记住它的IP。不过作为我们这类人来说，IP就可以了，我相信你是可以记住的。域名的话，毕竟考虑国情，你还得经过备案，上传各种资料以及自拍，在你不准备正式对外发布使用之前是没什么必要的。还有一种可以实现访问的方式是github,io，这是github推出 的一项免费服务，可以使用例如https://makergyt.github.io的域名访问到你的内容，网页可以通过它的桌面软件上传，屏蔽了服务器端的那些操作，比较简单。当然这是对于前端同学来讲适用。下面将分别开始这两种方式的实际操作。 2 开工2.1 服务器2.1.1 准备 先拥有，确切的说是租用一台云服务器(或者虚拟主机)，网络上有很多服务商，五花八门，国内的有腾讯云，百度云(不是百度网盘！)，国外的有godady，区别是国外的不需要备案，但是速度可能会慢，国内的相反。这里推荐阿里云（点击获取代金券），还有学生优惠，并且持续，关键是服务好。你可以选择时长，环境系统就选centos7（linux的一个发行版），不要用winserver,linux操作基础的都可以百度到,地域目前无所谓,时长看自身情况。 完成学生认证后，是直接获取支付宝认证信息，一步完成，就能使用这种优惠，购买时记得选择设置密码而先不是密钥，牢记你的密码。然后你进入管理控制台，就能看到你的服务器信息。 配置安全组,左侧安全组-&gt;配置规则-&gt;公网入方向-&gt;快速创建规则,端口就先全开了，自定义端口因为我们这里推荐linux系统，填22/22（winserver填3389/3389），授权对象填0.0.0.0/0，表示允许任何地方连接你的服务器，先这样设置（一般没人闲的黑学生机）。然后就开始ssh配置，这里使用阿里云的一键部署web环境包（密码：h1ac），包含php环境,包含了官方参考文档。 2.1.2 安装2.1.2.1 材料工具xshell(一个与linux通信的软件)和xftp(一个与服务器进行文件操作的软件)，然后其他的操作文档写的很详细，也可以参照最新官网文档。 2.1.2.2 开始 web服务器选择Apache就行，因为桌面调试一般也是这样的，免去兼容的操作。Nginx虽然性能好，总有一些新操作，对开发形成难度，建议以后再使用。其他的版本根据你桌面使用的环境，就高不就低。我们的原则是快速入门配置，搭好工具把时间留给学习开发，不要被这些门槛绊住。那些命令行操作慢慢就熟悉了，其实后面使用时只需要知道怎么连接，怎么上传文件即可。 2.1.2.3 配置web服务器如果你是安装了php环境，它会默认安装phpwind(一个开源论坛)和phpmyadmin（一个可以在线访问数据库的工具，留着）,因为访问服务器外网IP时，它是指向phpwind的，所以可以先卸载掉这个东西，直接指向到你的网站根目录alidata/www/,这样以后就很方便的能访问到下面的不同文件夹内容。这里的操作就需要参考官网文档了，也一样很详细。，在修改conf那一步，可参考这里已经测试过的配置文件（密码a3f1）替换掉phpwind.conf1234567891011121314151617181920&lt;DirectoryMatch "/alidata/www/(attachment|html|data)"&gt;&lt;Files ~ ".php"&gt;Order allow,denyDeny from all&lt;/Files&gt;&lt;/DirectoryMatch&gt;&lt;VirtualHost *:80&gt; DocumentRoot /alidata/www ServerName localhost ServerAlias localhost &lt;Directory "/alidata/www"&gt; Options Indexes FollowSymLinks AllowOverride all Order allow,deny Allow from all &lt;/Directory&gt; ErrorLog "/alidata/log/httpd/dx-error.log" CustomLog "/alidata/log/httpd/dx.log" common&lt;/VirtualHost&gt; 2.1.3 测试好了，现在可以上传几个文件进行测试，浏览器键入IP时如果下面没有index的引导文件，是这样直接显示的，可以写一个简单的index.html上传看下效果，然后使用手机浏览器，QQ/微信内部打开（发个链接给别人，会自动识别）再访问下，保证正常访问到就说明基本的配置已经成功了。由于微信的安全保护，如果是IP或者没有被他收录的域名，是会跳出提示框，不过也不影响继续能访问到。解决这个的方法就是备案，https认证等等一系列证明网站是良好文明的。 2.2 github.io先注册一个自己的账号，用户名很重要，因为稍后生成的链接就是像makergyt.github.io（makergyt是一个用户名），后期也可以修改，但对应的链接就会失效，需要再次配置。有三种方式，使用桌面软件快速构建，使用git命令，使用已经创建好的仓库，这里我们使用第一种。 2.2.1 开始 安装软件，复制.git路径 2.2.2 测试现在可以试着访问github.io了，用户名.github.io，因为github托管在国外，可能会比较慢。上述两种建站方式，建议前端开发静态页面可以先使用github.io。 实现建站的路有很多条，服务也很多种，但是一路畅通的很少，常常看似简单实际需要别的技术栈。去粗取精，权衡利弊，以上这两种是较为基础的。 Reference[1] Github.Websites for you and your projects.[EB/OL].https://pages.github.com .2017.]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从心所欲，无欲则刚]]></title>
    <url>%2Fzh-CN%2F%E4%BB%8E%E5%BF%83%E6%89%80%E6%AC%B2%EF%BC%8C%E6%97%A0%E6%AC%B2%E5%88%99%E5%88%9A%2F</url>
    <content type="text"><![CDATA[并不能决定生活的走向，只是让一切显得价值观正确。 临走前，半年就这样日月交替着 从来不相信感性的判断，而当经常性地理性思考后，直觉居然变得是那么准确，很想写下理论的认知，却也不由得被感觉、体验驱使认知……曾经认为这种经验是一种学不到的财富，而现在甚至觉得它有时候其实是有害的，本来只是想写写比赛，不知怎么牵扯出这么多思绪。痛定思痛，时间与精力就那么点，又何必浪费在操蛋的人身上。 王小波说，人的一切痛苦，都是出于对自己无能的愤恨。从来就不踏实，永远也不甘心。似乎没有后路，于是跑来跑去，抓着那一根根稻草。 我不断往上爬，不是为了被世界看到，而是想看见整个世界；我这么努力，就是为了让自己成功的速度，超过父母老去的速度。——咪蒙 当发现自己不是世界中心的时候，那是第一次长大。毒鸡汤中最棒的一句是，努力不一定成功，但是不努力一定会很舒服的。有的人可以很“文艺”地说自己的梦想很简单，工作几年就去休养生息。曾经刚开始认识这个世界的时候，也曾憧憬过桃花源记的痴梦，对，现在的我认为，的确是痴人说梦。当下的你在这样的梦想面前，幼稚而自私。但凡有点担当的，就会发现在这个世界怎么样生存不是你自己说了算的，你的努力也绝非只是代表着个人的奋斗。 当发现即使再怎么努力，有些事情终究还是令人无能为力的时候，那是我第二次长大。这两年，东奔西跑的，也撞了很多墙，墙或许依然在那里毫发无损，现在的我却也由衷地感谢它们。参加了这些无关痛痒的比赛，真切体验着过程比结果更重要。思考方式在不断成熟，即便可能跟有些人再怎么讲也说不通，我并不认为它是错的。庄子说，夏虫不可以语冰，井蛙不可以语海。这时候，真想用四川话怼一句，龟儿子，你懂个锤子。 这两年，干过苦力，体验过40度的高温下瞪着三轮像个乌龟一样往前爬的感觉，体验过底层劳动者被人蔑视的感觉，虽然当时的我尽力压制怒气，声明我也是个学生，请你尊重我!也曾被楼上的人称呼“叔叔”，当我抬头看去，她的头猛地缩了回去。那时候竟然感觉到一种累到掏空后的舒畅。也曾被老板指着鼻子批评，但也享受过极好的待遇，校园性与社会性身份的交替，的确是一种很别致的体验。这两年，他也没别的什么话，只是问，还有钱吗？而我一直在努力用自己的方式解答，自认为在月底吃土的同龄人中树立起了一种成熟的优越感。其实我们所努力的，不过是若干年后，也会保持这种优越感，不为生活所累，也能带给他们小康。 这两年，走走看看，也听了一些跟水平并不对等的讲座，无非是为了别成了那只被温水煮了的青蛙。在台下坐过，也拿过话筒，被人礼貌节性（象征性）地“怂恿”着代表发言，名字第一次出现在活动安排上的感觉也是挺好的。台上的讲者总会传达出一种态度，即使世界很操蛋，依然坚定地热爱并改变生活。 当明知道有些事情可能会无能为力，但还是会尽力争取的时候，这是我第三次长大。虽然在时间的维度上，并没有扩展出价值对等的广度，思维太快，而嘴巴永远跟不上趟，错过了很多机会很多人。但我知道，这一切已经可以结束。 半年时间，检验了一件事，你是砍柴的，他是放羊的，你和他聊了一天，他的羊吃饱了，你的柴呢？现在，没有软肋，没有欲望，没有痛点，无欲则刚。 刚才骑车过马路时，一个女生突然快跑差点相撞，被推到边上。当时还在恼火，随后一辆大车飞奔地闯了红灯。生活就是这么简单而复杂，感谢有这样的际遇，让我还有机会继续敲下这段文字，算了，不写了，把墨水留给未知。 本文采用https://makergyt.com/md 构建]]></content>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第三方平台API(以易班为例)的使用记录]]></title>
    <url>%2Fzh-CN%2F%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0API(%E4%BB%A5%E6%98%93%E7%8F%AD%E4%B8%BA%E4%BE%8B)%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[1. 前言服务商提供给第三方网站的API使用原理基本相似，使用说明都可以在相应开发平台查看wiki文档。以易班开放平台为例: 鉴于易班API使用目前最主要的用户身份验证和授权方式——oauth2.0，先了解下它的授权机制 当然，易班开放平台也给出了授权概述 2. 开始将以网站接入SDK为例，javaSDK的使用可以参考（这应该是目前能百度到的唯一的文章） .netSDK的使用参考,资料不多，不过是矿大学生开发的。 下面是phpSDK的（这个琢磨了些日子，容易上手） 2.1.php环境 php需要开启CURL，这是文档要求，如果没有启用这个扩展，会报错！ 当然也有其他的要求，不过后两个一般来说应该都会满足的 那么如果不支持curl扩展该怎么办呢？当然，你可以参照网上资料。不过经过测试，无论是改php.ini还是copy那些.dll文件到system32，均无效！那么简单粗暴的方式是重新配置升级php服务器（5.6就行），然后就OK了。 2.2 注册开放平台账号易班开放平台：可以直接申请（也不费事）。 申请后就获得了测试权限（就是可以体验接口作用的权限），至于要上线的网站，肯定会用到一些实名认证信息，就需要跟管理员申请更多权限 其他：QQ互联平台：首先个人开发者需要完成认证,用QQ登录后创建网站应用，然后就耐心等待吧(此平台体验并不完善，可能已经逐步放弃维护) 微信开放平台：当然也可以申请，不过是需要认证费用以及企业信息的。 其他还有类似百度、微博开发者平台/开放平台。 2.3 下载SDK易班phpSDK 2.4 认真阅读wiki后找一些demo下载 易班php：SDK里面有个demo文件夹 github：yibanSDK 玉林师范学院： 链接：http://pan.baidu.com/s/1o7RcYwi 密码：5who 依照原理重写了易班PHP SDK主要用于实现过程，不可用于生产环境https://github.com/MakerGYT/dx/blob/master/extend/ThinkSDK/Yiban.php]]></content>
      <categories>
        <category>record</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[总有一种美好值得期待]]></title>
    <url>%2Fzh-CN%2F%E6%80%BB%E6%9C%89%E4%B8%80%E7%A7%8D%E7%BE%8E%E5%A5%BD%E5%80%BC%E5%BE%97%E6%9C%9F%E5%BE%85%2F</url>
    <content type="text"><![CDATA[你不知道前面什么等着你，可你必须往前走。即使迷茫，时间依旧拖着你。所以我更在意的是与什么样的人同行，而我比过去前进了多少。不悲观也不乐观，如果前方坦途就大步向前走，如果是堵墙就把它砸出个口来。毕竟只有前行的人，才能遇到同样前行的人。]]></content>
      <categories>
        <category>thoughts</category>
      </categories>
  </entry>
</search>
